// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

SWIFT_CLASS_NAMED("Acl")
@interface KNVAcl : NSObject
+ (NSString * _Nonnull)CreatorKey;
@property (nonatomic, readonly, copy) NSString * _Nonnull creator;
- (nonnull instancetype)initWithCreator:(NSString * _Nonnull)creator OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithJson:(NSDictionary<NSString *, id> * _Nonnull)json;
- (NSDictionary<NSString *, id> * _Nonnull)toJson;
@end

@class KNVQuery;

SWIFT_PROTOCOL_NAMED("Cache")
@protocol __KNVCache
@property (nonatomic, copy) NSString * _Nonnull persistenceId;
@property (nonatomic, copy) NSString * _Nonnull collectionName;
@property (nonatomic) NSTimeInterval ttl;
- (void)saveEntity:(NSDictionary<NSString *, id> * _Nonnull)entity;
- (void)saveEntities:(NSArray<NSDictionary<NSString *, id> *> * _Nonnull)entities;
- (NSDictionary<NSString *, id> * _Nullable)findEntity:(NSString * _Nonnull)objectId;
- (NSArray<NSDictionary<NSString *, id> *> * _Nonnull)findEntityByQuery:(KNVQuery * _Nonnull)query;
- (NSDictionary<NSString *, NSString *> * _Nonnull)findIdsLmtsByQuery:(KNVQuery * _Nonnull)query;
- (NSArray<NSDictionary<NSString *, id> *> * _Nonnull)findAll;
- (NSUInteger)count;
- (void)removeEntity:(NSDictionary<NSString *, id> * _Nonnull)entity;
- (NSUInteger)removeEntitiesByQuery:(KNVQuery * _Nonnull)query;
- (void)removeAllEntities;
@end


SWIFT_CLASS_NAMED("CacheManager")
@interface __KNVCacheManager : NSObject
- (id <__KNVCache> _Nonnull)cache:(NSString * _Nullable)collectionName;
@end

@class __KNVUser;
@class NSURL;
@class __KNVSyncManager;
@class KNVPush;

SWIFT_CLASS_NAMED("Client")
@interface __KNVClient : NSObject
+ (__KNVClient * _Nonnull)sharedClient;
@property (nonatomic, readonly, strong) __KNVUser * _Nullable activeUser;
@property (nonatomic, readonly, copy) NSString * _Nullable appKey;
@property (nonatomic, readonly, copy) NSString * _Nullable appSecret;
@property (nonatomic, readonly, strong) NSURL * _Nonnull apiHostName;
@property (nonatomic, readonly, strong) NSURL * _Nonnull authHostName;
@property (nonatomic) NSURLRequestCachePolicy cachePolicy;
@property (nonatomic) NSTimeInterval timeoutInterval;
@property (nonatomic, copy) NSString * _Nullable clientAppVersion;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull customRequestProperties;
+ (NSURL * _Nonnull)defaultApiHostName;
+ (NSURL * _Nonnull)defaultAuthHostName;
@property (nonatomic, readonly, strong) __KNVCacheManager * _Null_unspecified cacheManager;
@property (nonatomic, readonly, strong) __KNVSyncManager * _Null_unspecified syncManager;
@property (nonatomic, readonly, strong) KNVPush * _Null_unspecified push;
@property (nonatomic) SWIFT_METATYPE(__KNVUser) _Nonnull userType;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)initialize;
- (nonnull instancetype)initWithAppKey:(NSString * _Nonnull)appKey appSecret:(NSString * _Nonnull)appSecret apiHostName:(NSURL * _Nonnull)apiHostName authHostName:(NSURL * _Nonnull)authHostName;
- (__KNVClient * _Nonnull)initializeWithAppKey:(NSString * _Nonnull)appKey appSecret:(NSString * _Nonnull)appSecret apiHostName:(NSURL * _Nonnull)apiHostName authHostName:(NSURL * _Nonnull)authHostName;
@property (nonatomic, readonly, copy) NSString * _Nullable authorizationHeader;
@end

typedef SWIFT_ENUM(NSUInteger, Error) {
  ErrorObjectIdMissing = 0,
  ErrorInvalidResponse = 1,
  ErrorNoActiveUser = 2,
  ErrorRequestCanceled = 3,
  ErrorInvalidStoreType = 4,
  ErrorUserWithoutEmailOrUsername = 5,
};
static NSString * _Nonnull const ErrorDomain = @"Kinvey.Error";

@class KNVMetadata;
@class NSDate;

SWIFT_CLASS_NAMED("File")
@interface KNVFile : NSObject
@property (nonatomic, copy) NSString * _Nullable fileId;
@property (nonatomic, copy) NSString * _Nullable fileName;
@property (nonatomic, copy) NSString * _Nullable mimeType;
@property (nonatomic) BOOL publicAccessible;
@property (nonatomic, strong) KNVAcl * _Nullable acl;
@property (nonatomic, strong) KNVMetadata * _Nullable metadata;
@property (nonatomic, strong) NSURL * _Nullable downloadURL;
@property (nonatomic, strong) NSDate * _Nullable expiresAt;
@end


SWIFT_CLASS_NAMED("Operation")
@interface __KNVOperation : NSObject
@end


SWIFT_CLASS_NAMED("ReadOperation")
@interface __KNVReadOperation : __KNVOperation
@end


SWIFT_CLASS_NAMED("FindOperation")
@interface __KNVFindOperation : __KNVReadOperation
@end

enum ReadPolicy : NSUInteger;

@interface __KNVFindOperation (SWIFT_EXTENSION(Kinvey))
- (nonnull instancetype)initWithQuery:(KNVQuery * _Nonnull)query deltaSet:(BOOL)deltaSet readPolicy:(enum ReadPolicy)readPolicy persistableClass:(Class _Nonnull)persistableClass cache:(id <__KNVCache> _Nonnull)cache client:(__KNVClient * _Nonnull)client;
@end


SWIFT_CLASS_NAMED("GetOperation")
@interface __KNVGetOperation : __KNVReadOperation
@end


@interface __KNVGetOperation (SWIFT_EXTENSION(Kinvey))
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id readPolicy:(enum ReadPolicy)readPolicy persistableClass:(Class _Nonnull)persistableClass cache:(id <__KNVCache> _Nonnull)cache client:(__KNVClient * _Nonnull)client;
@end


SWIFT_PROTOCOL_NAMED("Request")
@protocol KNVRequest
@property (nonatomic, readonly) BOOL executing;
@property (nonatomic, readonly) BOOL canceled;
- (void)cancel;
@end


SWIFT_CLASS_NAMED("HttpRequest")
@interface __KNVHttpRequest : NSObject <KNVRequest>
@property (nonatomic, readonly) BOOL executing;
@property (nonatomic, readonly) BOOL canceled;
- (void)cancel;
@end


SWIFT_PROTOCOL_NAMED("JsonObject")
@protocol KNVJsonObject
@optional
- (void)fromJson:(NSDictionary<NSString *, id> * _Nonnull)json;
- (NSDictionary<NSString *, id> * _Nonnull)toJson;
@end


SWIFT_CLASS_NAMED("LocalRequest")
@interface __KNVLocalRequest : NSObject <KNVRequest>
@property (nonatomic, readonly) BOOL executing;
@property (nonatomic, readonly) BOOL canceled;
- (void)cancel;
@end


SWIFT_CLASS_NAMED("Metadata")
@interface KNVMetadata : NSObject
+ (NSString * _Nonnull)LmtKey;
+ (NSString * _Nonnull)EctKey;
+ (NSString * _Nonnull)AuthTokenKey;
@property (nonatomic, strong) NSDate * _Nullable lmt;
@property (nonatomic, strong) NSDate * _Nullable ect;
@property (nonatomic, readonly, copy) NSString * _Nullable authtoken;
- (nonnull instancetype)initWithLmt:(NSString * _Nullable)lmt ect:(NSString * _Nullable)ect authtoken:(NSString * _Nullable)authtoken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithJson:(NSDictionary<NSString *, id> * _Nonnull)json;
- (NSDictionary<NSString *, id> * _Nonnull)toJson;
@end


SWIFT_CLASS_NAMED("MultiRequest")
@interface __KNVMultiRequest : NSObject <KNVRequest>
- (void)addRequest:(id <KNVRequest> _Nonnull)request;
@property (nonatomic, readonly) BOOL executing;
@property (nonatomic, readonly) BOOL canceled;
- (void)cancel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSData (SWIFT_EXTENSION(Kinvey))
@end


@interface NSDate (SWIFT_EXTENSION(Kinvey))
@end


@interface NSString (SWIFT_EXTENSION(Kinvey))
@end


@class NSURLRequest;

SWIFT_PROTOCOL_NAMED("PendingOperation")
@protocol KNVPendingOperation
@property (nonatomic, readonly, copy) NSString * _Nullable objectId;
- (NSURLRequest * _Nonnull)buildRequest;
@end


SWIFT_PROTOCOL_NAMED("Persistable")
@protocol KNVPersistable <KNVJsonObject, NSObject>
+ (NSString * _Nonnull)kinveyCollectionName;
+ (NSDictionary<NSString *, NSString *> * _Nonnull)kinveyPropertyMapping;
@end

@protocol __KNVSync;

SWIFT_CLASS_NAMED("SyncOperation")
@interface __KNVSyncOperation : __KNVOperation
- (nonnull instancetype)initWithSync:(id <__KNVSync> _Nonnull)sync persistableType:(Class <KNVPersistable> _Nonnull)persistableType cache:(id <__KNVCache> _Nonnull)cache client:(__KNVClient * _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("PurgeOperation")
@interface __KNVPurgeOperation : __KNVSyncOperation
- (nonnull instancetype)initWithSync:(id <__KNVSync> _Nonnull)sync persistableType:(Class <KNVPersistable> _Nonnull)persistableType cache:(id <__KNVCache> _Nonnull)cache client:(__KNVClient * _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
@end

@class UIApplication;
@class NSError;

SWIFT_CLASS_NAMED("Push")
@interface KNVPush : NSObject
- (void)registerForPush;
- (void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo;
@end


SWIFT_CLASS_NAMED("PushOperation")
@interface __KNVPushOperation : __KNVSyncOperation
- (nonnull instancetype)initWithSync:(id <__KNVSync> _Nonnull)sync persistableType:(Class <KNVPersistable> _Nonnull)persistableType cache:(id <__KNVCache> _Nonnull)cache client:(__KNVClient * _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
@end

@class NSPredicate;
@class NSSortDescriptor;

SWIFT_CLASS_NAMED("Query")
@interface KNVQuery : NSObject
@property (nonatomic, strong) NSPredicate * _Nullable predicate;
@property (nonatomic, copy) NSArray<NSSortDescriptor *> * _Nullable sortDescriptors;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithPredicate:(NSPredicate * _Nonnull)predicate;
- (nonnull instancetype)initWithSortDescriptors:(NSArray<NSSortDescriptor *> * _Nonnull)sortDescriptors;
- (nonnull instancetype)initWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors;
- (nonnull instancetype)initWithFormat:(NSString * _Nonnull)format argumentArray:(NSArray * _Nullable)argumentArray;
@end


@interface KNVQuery (SWIFT_EXTENSION(Kinvey))
@end



@interface __KNVReadOperation (SWIFT_EXTENSION(Kinvey))
- (id <KNVRequest> _Nonnull)execute:(void (^ _Nullable)(id _Nullable, NSError * _Nullable))completionHandler;
@end

typedef SWIFT_ENUM(NSUInteger, ReadPolicy) {
  ReadPolicyForceLocal = 0,
  ReadPolicyForceNetwork = 1,
  ReadPolicyBoth = 2,
};


SWIFT_CLASS_NAMED("WriteOperation")
@interface __KNVWriteOperation : __KNVOperation
@end

enum WritePolicy : NSUInteger;

SWIFT_CLASS_NAMED("RemoveOperation")
@interface __KNVRemoveOperation : __KNVWriteOperation
- (nonnull instancetype)initWithQuery:(KNVQuery * _Nonnull)query writePolicy:(enum WritePolicy)writePolicy sync:(id <__KNVSync> _Nonnull)sync persistableType:(Class <KNVPersistable> _Nonnull)persistableType cache:(id <__KNVCache> _Nonnull)cache client:(__KNVClient * _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
@end


@interface __KNVRemoveOperation (SWIFT_EXTENSION(Kinvey))
- (id <KNVRequest> _Nonnull)executeUInt:(void (^ _Nullable)(NSUInteger, NSError * _Nullable))completionHandler;
@end



SWIFT_CLASS_NAMED("SaveOperation")
@interface __KNVSaveOperation : __KNVWriteOperation
- (nonnull instancetype)initWithPersistable:(id <KNVPersistable> _Nonnull)persistable writePolicy:(enum WritePolicy)writePolicy sync:(id <__KNVSync> _Nonnull)sync cache:(id <__KNVCache> _Nonnull)cache client:(__KNVClient * _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL_NAMED("Sync")
@protocol __KNVSync
@property (nonatomic, copy) NSString * _Nonnull persistenceId;
@property (nonatomic, copy) NSString * _Nonnull collectionName;
- (null_unspecified instancetype)initWithPersistenceId:(NSString * _Nonnull)persistenceId collectionName:(NSString * _Nonnull)collectionName;
- (id <KNVPendingOperation> _Nonnull)createPendingOperation:(NSURLRequest * _Null_unspecified)request objectId:(NSString * _Nullable)objectId;
- (void)savePendingOperation:(id <KNVPendingOperation> _Nonnull)pendingOperation;
- (NSArray<id <KNVPendingOperation>> * _Nonnull)pendingOperations;
- (NSArray<id <KNVPendingOperation>> * _Nonnull)pendingOperations:(NSString * _Nullable)objectId;
- (void)removePendingOperation:(id <KNVPendingOperation> _Nonnull)pendingOperation;
- (void)removeAllPendingOperations;
- (void)removeAllPendingOperations:(NSString * _Nullable)objectId;
@end


SWIFT_CLASS_NAMED("SyncManager")
@interface __KNVSyncManager : NSObject
- (id <__KNVSync> _Nonnull)sync:(NSString * _Nonnull)collectionName;
@end



@interface __KNVSyncOperation (SWIFT_EXTENSION(Kinvey))
- (id <KNVRequest> _Nonnull)execute:(void (^ _Nullable)(id _Nullable, NSError * _Nullable))completionHandler;
- (id <KNVRequest> _Nonnull)executeUInt:(void (^ _Nullable)(NSUInteger, NSError * _Nullable))completionHandler;
@end


SWIFT_CLASS_NAMED("User")
@interface __KNVUser : NSObject
+ (NSString * _Nonnull)PersistableUsernameKey;
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
@property (nonatomic, readonly, strong) KNVAcl * _Nullable acl;
@property (nonatomic, readonly, strong) KNVMetadata * _Nullable metadata;
@property (nonatomic, copy) NSString * _Nullable username;
@property (nonatomic, copy) NSString * _Nullable email;
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId acl:(KNVAcl * _Nullable)acl metadata:(KNVMetadata * _Nullable)metadata client:(__KNVClient * _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithJson:(NSDictionary<NSString *, id> * _Nonnull)json client:(__KNVClient * _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toJson;
- (void)logout;
@property (nonatomic, readonly, copy) NSString * _Nullable authorizationHeader;
@end


@interface __KNVUser (SWIFT_EXTENSION(Kinvey))
+ (id <KNVRequest> _Nonnull)existsWithUsername:(NSString * _Nonnull)username client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(BOOL, NSError * _Nullable))completionHandler;
+ (id <KNVRequest> _Nonnull)loginWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
+ (id <KNVRequest> _Nonnull)signupWithUsername:(NSString * _Nullable)username password:(NSString * _Nullable)password client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
+ (id <KNVRequest> _Nonnull)destroyWithUserId:(NSString * _Nonnull)userId hard:(BOOL)hard client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
- (id <KNVRequest> _Nonnull)destroyWithHard:(BOOL)hard client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
+ (id <KNVRequest> _Nonnull)getWithUserId:(NSString * _Nonnull)userId client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
- (id <KNVRequest> _Nonnull)saveWithClient:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
+ (void)presentMICViewControllerWithRedirectURI:(NSURL * _Nonnull)redirectURI timeout:(NSTimeInterval)timeout client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
+ (void)presentMICViewControllerWithRedirectURI:(NSURL * _Nonnull)redirectURI timeout:(NSTimeInterval)timeout forceUIWebView:(BOOL)forceUIWebView client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
@end



@interface __KNVWriteOperation (SWIFT_EXTENSION(Kinvey))
- (id <KNVRequest> _Nonnull)execute:(void (^ _Nullable)(id _Nullable, NSError * _Nullable))completionHandler;
@end

typedef SWIFT_ENUM(NSUInteger, WritePolicy) {
  WritePolicyLocalThenNetwork = 0,
  WritePolicyForceLocal = 1,
  WritePolicyForceNetwork = 2,
};


SWIFT_CLASS("_TtC6Kinvey10__KNVError")
@interface __KNVError : NSObject
+ (NSError * _Nonnull)ObjectIdMissing;
+ (NSError * _Nonnull)InvalidResponse;
+ (NSError * _Nonnull)NoActiveUser;
+ (NSError * _Nonnull)RequestCanceled;
+ (NSError * _Nonnull)InvalidStoreType;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6Kinvey16__KNVPersistable")
@interface __KNVPersistable : NSObject
+ (NSString * _Nonnull)idKey:(Class <KNVPersistable> _Nonnull)type;
+ (NSString * _Nullable)kmdKey:(Class <KNVPersistable> _Nonnull)type;
+ (NSString * _Nullable)kinveyObjectId:(id <KNVPersistable> _Nonnull)persistable;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6Kinvey10__KNVQuery")
@interface __KNVQuery : NSObject
+ (KNVQuery * _Nonnull)query:(KNVQuery * _Nonnull)query persistableType:(Class <KNVPersistable> _Nonnull)persistableType;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
